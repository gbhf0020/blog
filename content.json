{"meta":{"title":"流月的博客","subtitle":null,"description":"","author":"流月","url":"http://blog.786692.xyz","root":"/"},"pages":[{"title":"","date":"2025-07-31T05:33:44.780Z","updated":"2025-07-31T05:33:44.780Z","comments":true,"path":"vercel.json","permalink":"http://blog.786692.xyz/vercel.json","excerpt":"","text":"{\"redirects\":[{\"source\":\"/52573f7b\",\"destination\":\"/notice\",\"permanent\":false,\"statusCode\":302},{\"source\":\"/7c71105e\",\"destination\":\"/notice\",\"permanent\":false,\"statusCode\":302},{\"source\":\"/6860d3bd\",\"destination\":\"/notice\",\"permanent\":false,\"statusCode\":302},{\"source\":\"/progress\",\"destination\":\"/notice\",\"permanent\":false,\"statusCode\":302},{\"source\":\"/about\",\"destination\":\"/notice\",\"permanent\":false,\"statusCode\":302},{\"source\":\"/friends\",\"destination\":\"/notice\",\"permanent\":false,\"statusCode\":302}]}"},{"title":"关于","date":"2025-04-13T05:14:38.000Z","updated":"2025-07-29T08:35:31.200Z","comments":true,"path":"about/index.html","permalink":"http://blog.786692.xyz/about/","excerpt":"","text":"关于本站不指望它被更多人看到，所以只有这些。我试图让它更严谨、周密，可你知道，那是很难的。是故，做出一个肆意出几分随意的博客，何尝不好？ 驱动与主题Powered by HexoTheme Redefine 关于流月一个喜欢记录和探索的中学生，若你想要知道更多，可以看看我的个人网站。 流月 侵权联系如果本站侵犯了您的合法权益，您可以联系我删除并予以歉意。联系方式QQ：3041495206电子邮件：&#103;&#98;&#x68;&#x66;&#x30;&#48;&#x32;&#48;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#111;&#x6d;"},{"title":"公告","date":"2025-05-17T04:17:02.000Z","updated":"2025-07-31T05:38:04.064Z","comments":true,"path":"notice/index.html","permalink":"http://blog.786692.xyz/notice/","excerpt":"","text":"停止访问公告各位： &amp;emsp14&amp;emsp14请稍后"},{"title":"分类","date":"2025-05-17T05:32:38.000Z","updated":"2025-05-17T05:36:18.871Z","comments":true,"path":"categories/index.html","permalink":"http://blog.786692.xyz/categories/","excerpt":"","text":""},{"title":"友情链接","date":"2025-05-03T11:03:12.000Z","updated":"2025-05-18T05:21:21.036Z","comments":true,"path":"friends/index.html","permalink":"http://blog.786692.xyz/friends/","excerpt":"","text":""},{"title":"进程全览","date":"2025-04-30T13:39:38.000Z","updated":"2025-06-26T07:31:46.629Z","comments":true,"path":"progress/index.html","permalink":"http://blog.786692.xyz/progress/","excerpt":"","text":"这里记叙一些本站的计划和历史，它不会很严谨，不然就显得无趣了。 计划 更换logo 新增相册页 新增友情链接页(2025.4.30) 更换域名(2025.5.2) 历史 2025&#x2F;06&#x2F;20 更换域名为 blog.786692.xyz 2025&#x2F;04&#x2F;13 网站启用"},{"title":"标签","date":"2025-04-20T01:50:39.000Z","updated":"2025-04-20T03:29:33.598Z","comments":true,"path":"tags/index.html","permalink":"http://blog.786692.xyz/tags/","excerpt":"","text":""}],"posts":[{"title":"破解 Typora","slug":"破解-Typora","date":"2025-07-28T04:25:53.000Z","updated":"2025-07-28T07:06:28.369Z","comments":true,"path":"6860d3bd","permalink":"http://blog.786692.xyz/6860d3bd","excerpt":"免费获取 Typora 的激活码。","text":"声明1.如果你有能力，呼吁使用正版软件。 2.破解工具来源于互联网，对于使用后可能造成的后果，本人不负责。 下载下载安装 TyporaTypora 的官网和官方中文站如下，根据我的试验，建议安装 1.9.5 及以下版本，否则可能无法达到破解效果。 注意：Typora 官网国内已无法访问，推荐访问中文站。 官方网站 中文官网 下载破解工具工具来源于 GitHub 开源项目“NodeInject_Hook_example”，但是因为违反美国《数字千年版权法》已被 GitHub 关闭，我提供网盘下载。 蓝奏云 123云盘 下载 下载 29ba gJwa 使用打开安装 Typora 的文件夹，将两个程序放进去，然后以管理员身份运行命令提示符（CMD）。输入 1node_inject.exe 等到输出done后完毕，然后输入 1license-gen.exe 就可以看到你的激活码，如图。 你只需要用激活码进行激活。 因为 Typora 服务器国内无法直连，激活过程可能失败并提示连接到国内服务器重试，点击“确定”即可。","categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://blog.786692.xyz/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"MarkText 汉化","slug":"MarkText-汉化","date":"2025-06-09T04:34:58.000Z","updated":"2025-07-28T06:58:23.840Z","comments":true,"path":"7c71105e","permalink":"http://blog.786692.xyz/7c71105e","excerpt":"一个 MarkText 汉化的方法。","text":"小引我们知道，Typora 是一个很不错的 Markdwon 编辑器，但它毕竟不是免费的，所以有很多人寻找其他优秀的编辑器，比如开源的 MarkText。不过它是英文界面，为了让视觉统一化，有了这篇汉化的文章。 本文提供的是 Windows 的方法，macOS 和 Linux 只能参考一下。 下载下载 MarkText现在 MarkText 的官网地址是 https://www.marktext.cc ，而非 https://marktext.app 。推荐在 GitHub 上下载，地址如下： 地址 https://github.com/marktext/marktext/releases 选择适合你的资源包下载，建议选安装程序，即 marktext-setup.exe（请以实际为准）。 下载汉化文件GitHub 上有汉化包： 汉化包地址 https://github.com/chinayangxiaowei/marktext-chinese-language-pack README 中的编译方法有点复杂，我们用简单点的。其实项目中提供了汉化后的发行版（Releases），但已经安装了就没必要再下一个整个程序，我们只需要关键的 app.asar 文件的汉化版本。 先下载汉化版的压缩包，解压后找到里面的 app.asar 文件， 相对路径 MarkText\\resources\\app.asar 将它复制，然后打开 MarkText 的安装地址的相同路径，一般在 D 盘的 MarkText 文件夹里，如果是 C 盘的话，可能在 C:\\Users\\你的用户名 \\AppData\\Local\\Programs\\MarkText或者Program Files&#x2F;Program Files (x86)里，自己找找。 汉化把 app.asar 文件替换了就行，再次打开 markText 就会发现菜单栏已经是中文了。恭喜你成功！ 当然，汉化后记得把汉化包删掉，只留官方的应用程序就行了。","categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://blog.786692.xyz/tags/%E6%95%99%E7%A8%8B/"}]},{"title":"下载B站视频","slug":"下载B站视频","date":"2025-04-19T05:01:57.000Z","updated":"2025-07-21T08:09:13.116Z","comments":true,"path":"52573f7b","permalink":"http://blog.786692.xyz/52573f7b","excerpt":"一个简单的下载B站视频的方法。","text":"概述这里介绍下载B站视频的方法。原理是用 you-get下载，然后用 FFmpeg合并音频和视频。 准备1.安装 you-getyou-get 基于 python，所以先确保有 python，然后安装 you-get。you-get 是一个轻量级的命令行视频下载工具，支持包括B站在内的众多视频网站。你可以使用以下命令进行安装： 1pip install you-get 2.安装 FFmpegFFmpeg 是一个强大的开源音视频处理工具，用于合并视频和音频。你可以从 FFmpeg官方网站 下载适合你操作系统的版本，并按照官方文档进行安装。安装完成后，确保 FFmpeg 命令可以在命令行中正常使用。下载后，将它解压到一个永久性文件夹（如C:\\Program Files\\ffmpeg），再在控制面板&gt;系统属性&gt;环境变量&gt;用户变量&gt;Path（应系统版本等不同）中新增变量,例如 变量路径 C:\\Program Files\\ffmpeg\\bin 3.获取 cookies我们知道，B站未登录只能看480P的视频，所以爬虫时也要携带 cookies。我们需要获取 bilibili.com 的 cookies，可以使用拓展 Get cookies.txt LOCALLY 来获取。 可以在chrome应用商店获取：https://chromewebstore.google.com/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc无法访问的话也可以用Crx搜搜：https://www.crxsoso.com/webstore/detail/cclelndahbckbenkjhflpdbgdldlbecc或者通过点击按钮下载，感谢Catbox提供下载支持 下载插件 进入B站，打开拓展，点击Export All Cookies就能得到对应的.txt文件。 下载先新建一个.py程序，然后填入代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970import subprocessimport osdef download_bilibili_video(url, cookie_file=None, output_dir=None): try: # 设置默认下载路径（可选） default_dir = os.path.join(os.path.expanduser(&quot;~&quot;), &quot;Downloads&quot;, &quot;bilibili_videos&quot;) target_dir = output_dir if output_dir else default_dir # 自动创建目录 os.makedirs(target_dir, exist_ok=True) # 构建命令列表 command = [&#x27;you-get&#x27;, &#x27;-o&#x27;, target_dir, url] if cookie_file: command.extend([&#x27;--cookies&#x27;, cookie_file]) # 调用 you-get subprocess.run(command, check=True) print(f&quot;视频已保存至：&#123;target_dir&#125;&quot;) # 获取下载的视频和音频文件 video_files = [f for f in os.listdir(target_dir) if f.endswith(&#x27;.mp4&#x27;)] if len(video_files) == 2: # 获取两个文件的完整路径和大小 file1 = os.path.join(target_dir, video_files[0]) file2 = os.path.join(target_dir, video_files[1]) size1 = os.path.getsize(file1) size2 = os.path.getsize(file2) # 根据文件大小判断音频和视频 if size1 &lt; size2: audio_path, video_path = file1, file2 else: audio_path, video_path = file2, file1 output_path = os.path.join(target_dir, &quot;merged_video.mp4&quot;) # 调用 ffmpeg 合并视频和音频 merge_command = [ &#x27;ffmpeg&#x27;, &#x27;-i&#x27;, video_path, &#x27;-i&#x27;, audio_path, &#x27;-c:v&#x27;, &#x27;copy&#x27;, &#x27;-c:a&#x27;, &#x27;aac&#x27;, &#x27;-strict&#x27;, &#x27;experimental&#x27;, output_path ] subprocess.run(merge_command, check=True) print(f&quot;视频和音频已合并，保存至：&#123;output_path&#125;&quot;) except subprocess.CalledProcessError as e: print(f&quot;下载失败: &#123;e&#125;&quot;) except Exception as e: print(f&quot;发生错误: &#123;e&#125;&quot;)if __name__ == &#x27;__main__&#x27;: video_url = input(&quot;请输入B站视频链接: &quot;) cookie_path = input(&quot;请输入cookie文件路径（可选，直接回车跳过）: &quot;) custom_dir = input(&quot;请输入下载路径（可选，默认存到Downloads/bilibili_videos）: &quot;) if cookie_path and custom_dir: download_bilibili_video(video_url, cookie_path, custom_dir) elif cookie_path: download_bilibili_video(video_url, cookie_path) elif custom_dir: download_bilibili_video(video_url, output_dir=custom_dir) else: download_bilibili_video(video_url) 然后运行程序，提供要下载的B站视频的链接和本地cookies文件的路径（如D:\\tools\\www.bilibili.com_cookies.txt）就可以完成下载了。 附如果每次都输入 cookies 地址很麻烦，可以将它固定到代码中，如下 不询问cookies的代码 将14行改成你的实际路径1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253import subprocessimport osdef download_bilibili_video(url): try: # 设置默认下载路径 default_dir = os.path.join(os.path.expanduser(&quot;~&quot;), &quot;Downloads&quot;, &quot;bilibili_videos&quot;) # 自动创建目录 os.makedirs(default_dir, exist_ok=True) # 构建命令列表 command = [&#x27;you-get&#x27;, &#x27;-o&#x27;, default_dir, url] cookie_file = &quot;C:\\\\tools\\www.bilibili.com_cookies.txt&quot; ##这里改成你的实际路径 if os.path.exists(cookie_file): command.extend([&#x27;--cookies&#x27;, cookie_file]) # 调用 you-get subprocess.run(command, check=True) print(f&quot;视频已保存至：&#123;default_dir&#125;&quot;) # 获取下载的视频和音频文件 video_files = [f for f in os.listdir(default_dir) if f.endswith(&#x27;.mp4&#x27;)] if len(video_files) == 2: # 简单判断纯视频和纯音频文件，这里假设文件小的是音频 video_file = max(video_files, key=lambda f: os.path.getsize(os.path.join(default_dir, f))) audio_file = min(video_files, key=lambda f: os.path.getsize(os.path.join(default_dir, f))) video_path = os.path.join(default_dir, video_file) audio_path = os.path.join(default_dir, audio_file) output_path = os.path.join(default_dir, &quot;merged_video.mp4&quot;) # 调用 ffmpeg 合并视频和音频 merge_command = [ &#x27;ffmpeg&#x27;, &#x27;-i&#x27;, video_path, &#x27;-i&#x27;, audio_path, &#x27;-c:v&#x27;, &#x27;copy&#x27;, &#x27;-c:a&#x27;, &#x27;aac&#x27;, &#x27;-strict&#x27;, &#x27;experimental&#x27;, output_path ] subprocess.run(merge_command, check=True) print(f&quot;视频和音频已合并，保存至：&#123;output_path&#125;&quot;) except subprocess.CalledProcessError as e: print(f&quot;下载或合并失败: &#123;e&#125;&quot;) except Exception as e: print(f&quot;发生错误: &#123;e&#125;&quot;)if __name__ == &#x27;__main__&#x27;: video_url = input(&quot;请输入B站视频链接: &quot;) download_bilibili_video(video_url) 完成运行后开始下载，过程如下 下载过程 site: Bilibili title: 示例视频 stream: format: dash-flv-HEVC container: mp4 quality: 高清 1080P hev1.1.6.L150.90 size: 4.1 MiB (4250178 bytes) # download-with: you-get --format=dash-flv-HEVC [URL] Downloading 示例视频.mp4…100% ( 4.1&#x2F; 4.1MB) ├████████████████████████████████████████┤[2&#x2F;2] 4 MB&#x2F;s 保存路径：C:\\Users\\YourName\\Downloads\\bilibili_videos 最后就下载完成了。 注意事项1.确保你的网络连接稳定，以避免下载过程中出现中断。2.部分视频可能受到版权保护，下载此类视频可能违反相关法律法规，请在合法合规的前提下使用本方法。3.在使用 FFmpeg 时，请确保其已正确安装并配置好环境变量，否则可能会导致合并失败。","categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://blog.786692.xyz/tags/%E6%95%99%E7%A8%8B/"},{"name":"python","slug":"python","permalink":"http://blog.786692.xyz/tags/python/"}]}],"categories":[],"tags":[{"name":"教程","slug":"教程","permalink":"http://blog.786692.xyz/tags/%E6%95%99%E7%A8%8B/"},{"name":"python","slug":"python","permalink":"http://blog.786692.xyz/tags/python/"}]}